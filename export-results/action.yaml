name: 'Export data to gs'
description: "Workflow that exports scale test results to gs bucket"
inputs:
  results_bucket:
    description: "Name of the cluster to create"
    required: true
  artifacts:
    description: "CL2 artifacts to export"
    required: true
  other_files:
    description: "Additional files to export"
    required: true
  test_name:
    description: "Name of the test"
    required: true
  tested_version:
    description: "Version of the tested software, takes precedence over tested_sha"
    required: false
  tested_sha:
    description: "SHA of the tested software"
    required: false
  results_regex:
    description: "Regex to filter results for summary"
    required: false
    default: "GenericPrometheusQuery*.json"
runs:
  using: "composite"
  steps:
    - name: Show results as GitHub Summary
      shell: bash
      run: |
        if [[ -n "${{ inputs.results_regex }}" ]]; then
          files=(${{ inputs.artifacts }}${{ inputs.results_regex }})

          declare -A summaries
          for file in "${files[@]}"; do
              base=$(basename "$file")
              test_name=$(echo "$base" | awk -F'_' '{print $(NF-1)}')
              clean_name=$(echo "$base" | sed -E 's/^GenericPrometheusQuery //; s/_[0-9TZ:-]+\.json$//; s/_/ /g')
              json_content=$(<"$file")

              summaries["$test_name"]+=$'### '"$clean_name"$'\n'
              summaries["$test_name"]+=$'\n'
              summaries["$test_name"]+=$'```\n'
              summaries["$test_name"]+="$json_content"
              summaries["$test_name"]+=$'\n```\n\n'
          done

          for test_name in $(printf "%s\n" "${!summaries[@]}" | sort); do
              {
                  echo -e "## $test_name\n"
                  echo -n "${summaries[$test_name]}"
                  echo ""
              } >> $GITHUB_STEP_SUMMARY
          done
        fi

    - name: Export Results
      shell: bash
      run: |
        echo ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} >> ./run-url.txt
        echo ${{ inputs.tested_version || inputs.tested_sha }} >> tested_version.txt
        # BUILD_ID needs to be an integer
        BUILD_ID="$(date +%s)"
        EXPORT_DIR="${{ inputs.results_bucket }}/logs/${{ inputs.test_name }}-${{ inputs.tested_version || github.ref_name }}/${BUILD_ID}"
        echo "::notice::BUILD_ID: $BUILD_ID"
        echo "::notice::EXPORT_DIR: $EXPORT_DIR"
        set +e
        gsutil -m cp -R ${{ inputs.artifacts }}/* $EXPORT_DIR/artifacts/
        artifact_status=$?
        gsutil -m cp tested_version.txt run-url.txt ${{ inputs.other_files }} $EXPORT_DIR/
        other_files_status=$?
        if [ $artifact_status -ne 0 ] || [ $other_files_status -ne 0 ]; then
          exit 1
        fi
